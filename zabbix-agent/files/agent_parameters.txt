##### DISTRIBUTED ITEMS BY AGBNMR SWITZERLAND - CENTRAL NODE - DO NOT EDIT !!!!! #####
UserParameter=tick,echo 1
UserParameter=cmd.ping[*],if [ "$1" != "" ]; then ping -i 0.2 -c 4 $1 | grep -E -o "[0-9]+% packet loss" | cut -d " " -f 1 | cut -d "%" -f 1; else echo 0; fi
UserParameter=postfix.queue,if [ -e /usr/sbin/postqueue ]; then /usr/sbin/postqueue -p | sed "s/Mail queue is empty/-- 0 kb in 0 requests/g" | tail -n1 | cut -d " " -f 5; else echo 0; fi
UserParameter=pollux.prepoll_status,if [ -r /pollux/var/local/zabbix/prepoll_status.txt ]; then cat /pollux/var/local/zabbix/prepoll_status.txt; else echo 0; fi
UserParameter=pollux.nightpoll_status,if [ -r /pollux/var/local/zabbix/nightpoll_status.txt ]; then cat /pollux/var/local/zabbix/nightpoll_status.txt; else echo 0; fi
UserParameter=pollux.postpoll_status,if [ -r /pollux/var/local/zabbix/postpoll_status.txt ]; then cat /pollux/var/local/zabbix/postpoll_status.txt; else echo 0; fi
UserParameter=pollux.date,date
UserParameter=pollux.plxmond_version,if [ -x /pollux/sbin/plxmond ]; then /pollux/sbin/plxmond -V 2> /dev/null; else echo 0; fi
UserParameter=pollux.timebomb,if [ -r /pollux/var/local/plxmond/timebomb.txt ]; then cat /pollux/var/local/plxmond/timebomb.txt; else echo 0; fi
UserParameter=pollux.crontab,if [ -r /pollux/var/local/plxmond/crontab.txt ]; then cat /pollux/var/local/plxmond/crontab.txt; else echo 0; fi
UserParameter=pollux.meterinfo,if [ -r /pollux/var/local/plxmond/meterinfo.txt ]; then cat /pollux/var/local/plxmond/meterinfo.txt; else echo 0; fi
UserParameter=pollux.meterlist,if [ -r /pollux/var/local/plxmond/meterlist.txt ]; then cat /pollux/var/local/plxmond/meterlist.txt; else echo 0; fi
UserParameter=pollux.prepoll,if [ -r /pollux/var/local/plxmond/prepoll.txt ]; then cat /pollux/var/local/plxmond/prepoll.txt; else echo 0; fi
UserParameter=pollux.nightpoll,if [ -r /pollux/var/local/plxmond/nightpoll.txt ]; then cat /pollux/var/local/plxmond/nightpoll.txt; else echo 0; fi
UserParameter=pollux.postpoll,if [ -r /pollux/var/local/plxmond/postpoll.txt ]; then cat /pollux/var/local/plxmond/postpoll.txt; else echo 0; fi
UserParameter=pollux.4900_tslot_check,if [ -r /pollux/var/local/plxmond/4900_tslot_check.txt ]; then cat /pollux/var/local/plxmond/4900_tslot_check.txt; else echo 0; fi
UserParameter=pollux.polled[*],if [ "$1" != "" ]; then if [ -r /pollux/var/local/zabbix/$1_nightpoll.txt ]; then cat /pollux/var/local/zabbix/$1_nightpoll.txt; else echo 0; fi; else echo 0; fi
UserParameter=pollux.topoll[*],if [ "$1" != "" ]; then if [ -r /pollux/var/local/zabbix/$1_prepoll.txt ]; then cat /pollux/var/local/zabbix/$1_prepoll.txt; else echo 0; fi; else echo 0; fi
UserParameter=compass.tvm5ms_pid,if [ $(pgrep tvm5ms > /dev/null 2>&1; echo $?) -eq 0 ]; then pgrep tvm5ms | head -n 1; else echo 0; fi
UserParameter=compass.tvm5ms_procs_status,if [ $(pgrep tvm5ms | wc -l) -ge $(grep '^num_modems\( \)\{0,\}=\( \)\{0,\}\([0-9]\)\{1,\}' /etc/tvm5ms/tvm5ms.conf | sed 's/^num_modems\( \)\{0,\}=\( \)\{0,\}\([0-9]\{1,\}\).*/\3/') ]; then echo 0; else echo 1; fi
UserParameter=pollux.version,if [ -r /pollux/Releases/PolluxCS-production -a $(stat -L /pollux/Releases/PolluxCS-production > /dev/null 2>&1; echo $?) -eq 0 ]; then readlink /pollux/Releases/PolluxCS-production | sed 's/^.*PolluxCS-//' | sed 's/\/$//'; else echo 'BROKEN'; fi
UserParameter=pollux.produced,if [ -r /pollux/var/local/zabbix/postpoll.txt ]; then cat /pollux/var/local/zabbix/postpoll.txt; else echo 0; fi
UserParameter=linux.kernel_module[*],if [ "$1" != "" ]; then lsmod | grep -v Used | sed 's/ .*$//' | grep "$1" | wc -l; else echo 0; fi
UserParameter=pollux.polled_total,echo $(($(cat /pollux/var/local/zabbix/*_nightpoll.txt 2> /dev/null | tr '\n' '+' | sed 's/+$//')))
UserParameter=pollux.topoll_total,echo $(($(cat /pollux/var/local/zabbix/*_prepoll.txt 2> /dev/null | tr '\n' '+' | sed 's/+$//')))
UserParameter=linux.slackversion,if [ -r /etc/slackware-version ]; then cat /etc/slackware-version; else echo 'NO SLACKWARE LINUX'; fi
UserParameter=pollux.polling_phase,if [ -r /pollux/var/local/plxmond/polling_phase.txt ]; then cat /pollux/var/local/plxmond/polling_phase.txt; else echo 0; fi
UserParameter=pollux.preval[*],if [ "$1" != "" ]; then if [ -r /pollux/var/local/zabbix/preval_$1.txt ]; then cat /pollux/var/local/zabbix/preval_$1.txt; else echo 0; fi; else echo 0; fi
UserParameter=pollux.rimw[*],if [ "$1" != "" ]; then if [ -r /pollux/var/local/zabbix/rimw_$1.txt ]; then cat /pollux/var/local/zabbix/rimw_$1.txt; else echo 0; fi; else echo 0; fi
UserParameter=pollux.polling_first_check[*],eval "$(grep '^[[:blank:]]\{0,\}PLXMON_NIGHTPOLL_FIRST_CHECK=' /pollux/etc/plxmond.conf 2> /dev/null)"; minpolled=$1; now=$(date +%Y%m%d%H%M); check=$(date +%Y%m%d%H%M -d "${PLXMON_NIGHTPOLL_FIRST_CHECK:-02:10}"); if [ $now -ge $check -a $now -le "$(($check+10))" -a $(($(cat /pollux/var/local/zabbix/*_nightpoll.txt 2> /dev/null | tr '\n' '+' | sed 's/+$//'))) -lt "${minpolled:-0}" ]; then echo 1; else echo 0; fi
#UserParameter=pollux.lr_consist_chk,if [ -r /pollux/var/local/plxmond/live_ratings_consistency_check.txt ]; then cat /pollux/var/local/plxmond/live_ratings_consistency_check.txt; else echo 0; fi
UserParameter=pollux.npalert[*],if [ "$1" != "" ]; then if [ -r /pollux/var/local/zabbix/$1_nightpoll_alert.txt ]; then cat /pollux/var/local/zabbix/$1_nightpoll_alert.txt; else echo 0; fi; else echo 0; fi
UserParameter=pollux.thspoll[*],if [ "$1" != "" ]; then if [ -r /pollux/var/local/zabbix/$1_cur_threshold.txt ]; then cat /pollux/var/local/zabbix/$1_cur_threshold.txt; else echo 0; fi; else echo 0; fi
UserParameter=pollux.npstatus[*],if [ -r /pollux/var/local/zabbix/nightpoll_status.txt ]; then cat /pollux/var/local/zabbix/nightpoll_status.txt; else echo 0; fi
UserParameter=pollux.plxwtest,plxwpath="/pollux/var/tmp";ctrl=0; mkdir -p $plxwpath > /dev/null 2>&1 && echo 1 > $plxwpath/plxwtest 2> /dev/null && read ctrl < $plxwpath/plxwtest > /dev/null 2>&1 && rm -f $plxwpath/plxwtest; echo $ctrl
UserParameter=ntp.offset,/usr/sbin/ntpq -pn 2> /dev/null | /usr/bin/awk 'BEGIN { offset=0 } $1 ~ /\*/ { offset=$9*1000 } END { print offset }'
UserParameter=polluxfts.keepalive,ps aux | grep polluxFtsKeepAlive.sh | grep -v grep | wc -l
UserParameter=polluxfts.postgresql,/opt/pgsql/bin/psql -U postgres -l | grep polluxfts | wc -l
UserParameter=linux.boot_after_panic,if [ $(cat /proc/uptime |cut -d'.' -f1) -lt '1200' ] ; then dmesg | grep 'EXT3-fs: recovery complete.' | wc -l ; else echo 0;fi
UserParameter=pollux.expth[*],python /pollux/sbin/expth.py $1 $2 $3 $4 $5
UserParameter=pollux.failedattempts,grep "Login request refused" /pollux/Releases/PolluxCS-production/log2000/RPCSSVSv.???.log | wc -l
UserParameter=polluxfts.alertmsg,/pollux/Releases/PolluxFts/scripts/NightPollStatus.sh
UserParameter=polluxfts.servicewd[*],echo "select EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP(0) - alivetimestamp)) as ts  from service where servicetype LIKE '$1';" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
UserParameter=polluxfts.linecallavail[*],echo "select 1 - cast((select count(*) from t_linestatus where linetype=2 and ttystatus=1) as float) / (cast((select count(*) from t_linestatus where linetype=2) as float) + 0.001);" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
UserParameter=polluxfts.topoll[*],echo "select SUM(total) from nightpollingtotal;" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
UserParameter=polluxfts.tocall[*],echo "select SUM(total) from nightcallingtotal;" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
UserParameter=polluxfts.fppoll[*],echo "select SUM(total) from nightpollingfrompanel;" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
UserParameter=polluxfts.fpcall[*],echo "select SUM(total) from nightcallingfrompanel;" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
UserParameter=polluxfts.polled[*],echo "select SUM(total) from nightpollingsuccess;" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
UserParameter=polluxfts.called[*],echo "select SUM(total) from nightcallingsuccess;" | psql --no-align -t -h `grep Servername /etc/odbc.ini |/usr/bin/awk '{print $(3)}'` -U postgres polluxfts
